name: CI - Test LogMeIn App

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: logs_db
          POSTGRES_USER: logs_user
          POSTGRES_PASSWORD: logs_password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        run: |
          cd app/backend
          pip install -r requirements.txt
          pip install -r requirements.dev.txt  # pour les tests

      - name: Run backend tests
        run: |
          cd app/backend
          export DB_HOST=localhost
          export DB_NAME=logs_db
          export DB_USER=logs_user
          export DB_PASSWORD=logs_password
          export DB_PORT=5432
          sh run_tests.sh

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose
        run: |
          # Installer docker-compose v1 (plus simple pour docker-compose.yml classique)
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build Docker images for LogMeIn app
        run: |
          cd app
          docker-compose build
      
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
          python3.11 -m flake8 app/backend/tests/app.py
          python3.11 -m flake8 app/backend/tests/wait_for_db.py
